0001   0000             ;***************************************************************************
0002   0000             ;  PROGRAM:			RAM STACK TEST PROGRAM       
0003   0000             ;  PURPOSE:			Key typed on PC will display. Demo CALL & RET. Init SP   
0004   0000             ;  ASSEMBLER:		TASM 3.2        
0005   0000             ;  LICENCE:			The MIT Licence
0006   0000             ;  AUTHOR :			MCook
0007   0000             ;  CREATE DATE :	04 Apr 15
0008   0000             ;***************************************************************************
0009   0000             
0010   0000             ;ROM : 0000H - > 07FFH
0011   0000             ;RAM : 8000H - > 87FFH 
0012   0000             
0013   0000             UART0:       .EQU    00H            ; DATA IN/OUT
0014   0000             UART1:       .EQU    01H            ; CHECK RX
0015   0000             UART2:       .EQU    02H            ; INTERRUPTS
0016   0000             UART3:       .EQU    03H            ; LINE CONTROL
0017   0000             UART4:       .EQU    04H            ; MODEM CONTROL
0018   0000             UART5:       .EQU    05H            ; LINE STATUS
0019   0000             UART6:       .EQU    06H            ; MODEM STATUS
0020   0000             UART7:       .EQU    07H            ; SCRATCH REG.
0021   0000             
0022   0000             RAMTOP:      .EQU    87FFH			; TOP ADDRESS OF RAM
0023   0000             
0024   0000             .ORG 00H
0025   0000             			
0026   0000             MAIN:
0027   0000 31 FF 87    			LD		SP,RAMTOP
0028   0003 3E 00       			LD 		A,00H	
0029   0005 CD 11 00    			CALL	INIT_UART
0030   0008 CD 22 00    			CALL	GET_CHAR_UART
0031   000B CD 2D 00    			CALL	SEND_CHAR_UART
0032   000E C3 00 00    			JP		MAIN
0033   0011             			
0034   0011             ;***************************************************************************
0035   0011             ;INIT_UART
0036   0011             ;Function: Initialize the UART to BAUD Rate 9600 (1.8432 MHz clock input)
0037   0011             ;DLAB A2 A1 A0 Register
0038   0011             ;0    0  0  0  Receiver Buffer (read),
0039   0011             ;              Transmitter Holding
0040   0011             ;              Register (write)
0041   0011             ;0    0  0  1  Interrupt Enable
0042   0011             ;X    0  1  0  Interrupt Identification (read)
0043   0011             ;X    0  1  0  FIFO Control (write)
0044   0011             ;X    0  1  1  Line Control
0045   0011             ;X    1  0  0  MODEM Control
0046   0011             ;X    1  0  1  Line Status
0047   0011             ;X    1  1  0  MODEM Status
0048   0011             ;X    1  1  1  Scratch
0049   0011             ;1    0  0  0  Divisor Latch
0050   0011             ;              (least significant byte)
0051   0011             ;1    0  0  1  Divisor Latch
0052   0011             ;              (most significant byte)
0053   0011             ;***************************************************************************
0054   0011             
0055   0011             INIT_UART:
0056   0011 3E 80                   LD     A,80H			; Mask to Set DLAB Flag
0057   0013 D3 03       			OUT    (UART3),A
0058   0015 3E 0C       			LD     A,12				; Divisor = 12 @ 9600bps w/ 1.8432 Mhz
0059   0017 D3 00       			OUT    (UART0),A		; Set BAUD rate to 9600
0060   0019 3E 00       			LD     A,00
0061   001B D3 01       			OUT    (UART1),A		; Set BAUD rate to 9600
0062   001D 3E 03       			LD     A,03H
0063   001F D3 03       			OUT    (UART3),A		; Set 8-bit data, 1 stop bit, reset DLAB Flag
0064   0021 C9          			RET
0065   0022             			
0066   0022             ;***************************************************************************
0067   0022             ;GET_CHAR_UART
0068   0022             ;Function: Get current character from UART place in Accumulator
0069   0022             ;***************************************************************************
0070   0022             
0071   0022             GET_CHAR_UART:   
0072   0022 DB 05       			IN      A,(UART5)		; Get the line status register's contents
0073   0024 CB 47       			BIT     0,A				; Test BIT 0, it will be set if the UART is ready to receive
0074   0026 CA 22 00    			JP      Z,GET_CHAR_UART
0075   0029             			
0076   0029 DB 00       			IN      A,(UART0)		; Get character from the UART 
0077   002B 47          			LD      B,A				; Store character into B Register
0078   002C C9          			RET
0079   002D             			
0080   002D             ;***************************************************************************
0081   002D             ;SEND_CHAR_UART
0082   002D             ;Function: Send current character in Accumulator to UART
0083   002D             ;***************************************************************************
0084   002D             
0085   002D             SEND_CHAR_UART:   
0086   002D DB 05       			IN      A,(UART5)		; Get the line status register's contents
0087   002F CB 6F       			BIT     5,A				; Test BIT 5, it will be set if the UART is ready to send
0088   0031 CA 2D 00    			JP      Z,SEND_CHAR_UART
0089   0034             			
0090   0034 78          			LD		A,B				; Get character from B Register obtained earlier
0091   0035 D3 00       			OUT     (UART0),A		; Send character through the UART 
0092   0037 C9          			RET
0093   0038             			
0094   0038             .END			
0095   0038             

ADDR  00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
-----------------------------------------------------
0000  31 FF 87 3E 00 CD 11 00 CD 22 00 CD 2D 00 C3 00
0010  00 3E 80 D3 03 3E 0C D3 00 3E 00 D3 01 3E 03 D3
0020  03 C9 DB 05 CB 47 CA 22 00 DB 00 47 C9 DB 05 CB
0030  6F CA 2D 00 78 D3 00 C9 00 00 00 00 00 00 00 00


tasm: Number of errors = 0
