0001   0000             ;***************************************************************************
0002   0000             ;  PROGRAM:			UART  Echo Test Program        
0003   0000             ;  PURPOSE:			Key typed on PC will display   
0004   0000             ;  ASSEMBLER:		TASM 3.2        
0005   0000             ;  LICENCE:			The MIT Licence
0006   0000             ;  AUTHOR :			MCook
0007   0000             ;  CREATE DATE :	15 Mar 15
0008   0000             ;***************************************************************************
0009   0000             
0010   0000             UART0:       .EQU    00H            ; DATA IN/OUT
0011   0000             UART1:       .EQU    01H            ; CHECK RX
0012   0000             UART2:       .EQU    02H            ; INTERRUPTS
0013   0000             UART3:       .EQU    03H            ; LINE CONTROL
0014   0000             UART4:       .EQU    04H            ; MODEM CONTROL
0015   0000             UART5:       .EQU    05H            ; LINE STATUS
0016   0000             UART6:       .EQU    06H            ; MODEM STATUS
0017   0000             UART7:       .EQU    07H            ; SCRATCH REG.
0018   0000             
0019   0000             .ORG 00H
0020   0000             
0021   0000             ;***************************************************************************
0022   0000             ;INIT_UART
0023   0000             ;Function: Initialize the UART to BAUD Rate 9600 (1.8432 MHz clock input)
0024   0000             ;DLAB A2 A1 A0 Register
0025   0000             ;0    0  0  0  Receiver Buffer (read),
0026   0000             ;              Transmitter Holding
0027   0000             ;              Register (write)
0028   0000             ;0    0  0  1  Interrupt Enable
0029   0000             ;X    0  1  0  Interrupt Identification (read)
0030   0000             ;X    0  1  0  FIFO Control (write)
0031   0000             ;X    0  1  1  Line Control
0032   0000             ;X    1  0  0  MODEM Control
0033   0000             ;X    1  0  1  Line Status
0034   0000             ;X    1  1  0  MODEM Status
0035   0000             ;X    1  1  1  Scratch
0036   0000             ;1    0  0  0  Divisor Latch
0037   0000             ;              (least significant byte)
0038   0000             ;1    0  0  1  Divisor Latch
0039   0000             ;              (most significant byte)
0040   0000             ;***************************************************************************
0041   0000             
0042   0000             INIT_UART:
0043   0000 3E 80                   LD     A,80H			; Mask to Set DLAB Flag
0044   0002 D3 03       			OUT    (UART3),A
0045   0004 3E 0C       			LD     A,12				; Divisor = 12 @ 9600bps w/ 1.8432 Mhz
0046   0006 D3 00       			OUT    (UART0),A		; Set BAUD rate to 9600
0047   0008 3E 00       			LD     A,00
0048   000A D3 01       			OUT    (UART1),A		; Set BAUD rate to 9600
0049   000C 3E 03       			LD     A,03H
0050   000E D3 03       			OUT    (UART3),A		; Set 8-bit data, 1 stop bit, reset DLAB Flag
0051   0010             			
0052   0010             			
0053   0010             MAIN:
0054   0010 3E 00       			LD 		A,00H		
0055   0012             			
0056   0012             ;***************************************************************************
0057   0012             ;GET_CHAR_UART
0058   0012             ;Function: Get current character from UART place in Accumulator
0059   0012             ;***************************************************************************
0060   0012             
0061   0012             GET_CHAR_UART:   
0062   0012 DB 05       			IN      A,(UART5)		; Get the line status register's contents
0063   0014 CB 47       			BIT     0,A				; Test BIT 0, it will be set if the UART is ready to receive
0064   0016 CA 12 00    			JP      Z,GET_CHAR_UART
0065   0019             			
0066   0019 DB 00       			IN      A,(UART0)		; Get character from the UART 
0067   001B 47          			LD      B,A				; Store character into B Register
0068   001C             			
0069   001C             ;***************************************************************************
0070   001C             ;SEND_CHAR_UART
0071   001C             ;Function: Send current character in Accumulator to UART
0072   001C             ;***************************************************************************
0073   001C             
0074   001C             SEND_CHAR_UART:   
0075   001C DB 05       			IN      A,(UART5)		; Get the line status register's contents
0076   001E CB 6F       			BIT     5,A				; Test BIT 5, it will be set if the UART is ready to send
0077   0020 CA 1C 00    			JP      Z,SEND_CHAR_UART
0078   0023             			
0079   0023 78          			LD		A,B				; Get character from B Register obtained earlier
0080   0024 D3 00       			OUT     (UART0),A		; Send character through the UART 
0081   0026             			
0082   0026 C3 10 00    	JP      MAIN
0083   0029             			
0084   0029             .END			
0085   0029             

ADDR  00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F
-----------------------------------------------------
0000  3E 80 D3 03 3E 0C D3 00 3E 00 D3 01 3E 03 D3 03
0010  3E 00 DB 05 CB 47 CA 12 00 DB 00 47 DB 05 CB 6F
0020  CA 1C 00 78 D3 00 C3 10 00 00 00 00 00 00 00 00


tasm: Number of errors = 0
